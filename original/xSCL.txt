                          SCL eXplorer (xSCL) v1.0
                    Copyright (C) 2000 HalfElf, Н.Новгород
              Copyright (C) 2003 Александр Медведев, Старый Оскол

┌─[О программе]───────────────────────────────────────────────────────────────
│    xSCL  является плагином к FAR'у, который обеспечивает комфортную работу с
│ файлами формата SCL. Он позволяет:
│ 1. Копировать файлы форматов SCL, HoBeta и обычные как в, так и из текущего
│    SCL'я.
│ 2. Удалять файлы из SCL'я.
│ 3. Переименовывать файлы и менять их стартовый адрес внутри SCL'я.
│    При   этом  плагин  корректно  обрабатывает  длинные  файлы  и  позволяет
│ при необходимости отбрасывать HoBet'ный заголовок.
·
·
├─[Установка]─────────────────────────────────────────────────────────────────
│ 1. Создайте каталог ZX в каталоге FAR/Plugins
│ 2. Скопируйте все файлы из архива в этот каталог
│ 3. Перезагрузите FAR
·
·
├─[Работа с панелью]──────────────────────────────────────────────────────────
│    После  нажатия  Клавиши  Enter  на  SCL файле Вы увидите на панели список
│ файлов  находящихся  внутри.    В  зависимости  от  текущего  режима  панели
│ информация  о  файлах  будет различаться.  Плагин  переопределяет  4 режима,
│ между  ними  можно переключаться нажимая клавиши LCtrl+3, LCtrl+4, LCtrl+5 и
│ LCtrl+5.
│    Полная  информация  о  файле  включает:  реальное  имя файла, HoBeta имя,
│ размер,  количество  секторов,  адрес загрузки/длина basic, описание формата
│ файла  и  комментарий. О формировании HoBeta имен и описании формата читайте
│ чуть ниже.
│    CheckBox  Без заголовков позволяет записать только тело файла (без HoBeta
│ или  SCL  заголовков).  Кроме  того,  если  длина  файла в заголовке указана
│ корректно  (т.е.  не противоречит длине файла в секторах), мусор находящийся
│ в  конце  последнего  сектора  файла  также  не  будет  записан.  Это  может
│ пригодиться, например, при распаковке текстовых файлов.
│    Плагин  нормально  обрабатывает  ситуацию  с  уже  существующими файлами,
│ поэтому  можете  спокойно  копировать  файлы  туда/сюда не опасаясь потерять
│ данные.
·
·
├─[Формирование HoBeta имен]──────────────────────────────────────────────────
│    Необходимость  введения  HoBeta  имен  объясняется  очень просто - MS DOS
│ накладывает на имена файлов значительно больше ограничений чем TR-DOS. Имена
│ формируются очень просто:
│ 1. Все недопустимые в MS DOS символы заменяются на символ  '_'.
│ 2. Начальные и конечные '_' отбрасываются.
│ 3. Если получилось одно  из  зарезервированных в  MS DOS имен (например lpt1
│    или prn), то к имени добавляется один символ '_'.
│ 4. Особым  образом  обрабатываются  имена  "многотомных"  ZXZIP архивов. Все
│    тома получают одно и тоже имя совпадающее с именем первого тома.
│    Расширение  формируется  из  символа  '$' и типа файла. Если файл с таким
│ именем  и  расширением уже существует, то к расширению добавляется очередная
│ цифра.  При  этом  есть  еще одна особенность. Если плагин успешно определил
│ формат  файла,  то символ '$' может быть заменен на другой, заданный в файле
│ types.ini, аналогичным образом может измениться и первая буква расширения.
·
·
├─[Определение формата файла]─────────────────────────────────────────────────
│    Определение  формата  введено для того, чтобы FAR мог раскрасить файлы на
│ панели  в  зависимости  от их типа. Тип (он же формат) файла определяется на
│ основании  его  заголовка  и/или  сигнатуры.  Правила определения задаются в
│ файле types.ini, путь к которому задаётся в окне настройки. Стандартный файл
│ types.ini  позволяет с большой  долей вероятности определить, что конкретный
│ файл  является  графическим,  ассемблерным  исходником,  упакован  одним  из
│ известных компрессоров (hrust, hrum, ms pack и др), является  файлом  одного
│ из  музыкальных  редакторов. Для получения более полного списка определяемых
│ форматов смотрите types.ini.
│    Для  того  чтобы  раскрасить  файлы  пользуйтесь  стандартным  FAR'овским
│ методом: F9/Параметры/Раскраска файлов. Имеет смысл установить раскраску для
│ следующих масок:
│  *.!b* - basic
│  *.!s* - графика
│  *.!a* - ассемблерные исходники
│  *.!m* - музыкальные файлы
│    Кроме  того  для  более  подробной информации можно включить 5 и 6 режимы
│ панели (LCtrl+5 или 6 соответственно).
│    Теперь   немного   о   формате   types.ini.   Данный   файл   состоит  из
│ последовательности  секций.  Каждая  секция описывает один из распознаваемых
│ форматов. Строки начинающиеся с символа '#' или ';' являются  комментариями.
│ Каждая секция может содержать следующие параметры:
│ ∙ Type      - тип файла в системе TR DOS
│ ∙ Start     - адрес загрузки/длина basic;
│ ∙ Size      - размер файла;
│ ∙ NoSecs    - количество занимаемых секторов;
│ ∙ Comment   - комментарий к файлу
│ ∙ Signature - некоторая последовательность байт в пределах первого сектора.
│    Комментарий   к  файлу  -  это  краткое  описание  файла,  которое  может
│ находиться  в  нем  самом.  К  сожалению, подобную роскошь позволяют хранить
│ далеко  не  все  файлы, но комментарий есть в файлах ассемблера XAS и многих
│ музыкальных редакторов.
│    Формат:
│      Comment = <смещение> <длина>
│    Формат последнего параметра следующий:
│      Signature=<смещение> <байт> {<байт>  }...
│    Сигнатура  ищется и комментарий выдергивается только в пределах первых 16
│ секторов файла.
│    Следующие 4 параметра определяют: новый спец.символ (SpecialChar), первую
│ букву  расширения  (NewType),  текстовое  описание  формата (Description), и
│ (ShowHeader)  -  определяет  необходимость  записывать  HoBeta заголовок при
│ извлечении файла для просмотра (F3) или быстрого просмотра (Ctrl+Q).
│    Числовые  значения  могут  быть заданы в десятичной или шестнадцатеричной
│ системе  (префикс  0x  или  #).  Кроме  того  они  могут  быть заданы в виде
│ '<символы>',  где  <символы>  -  один  (для  байтовых)  или два символа (для
│ параметров  размером  в  слово).  Если  хотите  разобраться более подробно -
│ смотрите файл types.ini
│    Также   стоит   отметить,   что   при   определении   типа  файла  секции
│ просматриваются  с начала файла, поэтому более конкретные определения должны
│ располагаться ближе к началу.
│    Примечание: если в процессе редактирования файла types.ini вы ошибетесь и
│ напишите нечто, что парсер не сможет корректно обработать, при загрузке
│ плагина (это может произойти либо при запуске FAR'а, либо при первом входе в
│ в SCL файл) появиться сообщение:
│    Файл "types.ini" содержит ошибку(и)
·
·
├─[Конфигурация плагина]──────────────────────────────────────────────────────
│    Существует  несколько  параметров,  которые вы можете настроить по своему
│ вкусу.  Для  их  изменения жмите F9/Параметры/Параметры внешних/Работа с SCL
│ файлами.
│ 
│ Определять формат файлов - вкл/выкл определение формата файла
│ Показывать расширения - вкл/выкл отображение 3х буквенных расширений
│
│ ( ) HoBeta
│ ( ) SCL                    - выбор формата копируемых файлов
│ () Автоматический выбор
│
│    Выбор  формата  работает следующим образом: если выбран конкретный формат
│ (HoBeta   или   SCL),  то   при   копировании  файлов  он  и  будет  выбран.
│ Автоматический  выбор  чуть  более  "интеллектуален", при копировании одного
│ файла выбирается формат HoBeta,  при копировании нескольких - SCL.
│
│   Путь к INI файлу - полный путь  к  файлу,  содержащему  описания  форматов
│ файлов.  Если  кроме xSCL также установлены xHRiP, xZXZIP или xTRD, то имеет
│ смысл  задать  во  всех плагинах общий ini файл. Если путь не указан (пустая
│ строка), то будет искаться файл с именем types.ini в каталоге с плагином.
·
·
├─[История]───────────────────────────────────────────────────────────────────
│
├─┤30.12.2003├──┤xSCL v1.0├─
│
│  [+] Обнуление остатка сектора при добавлении файла
│  [+] Ускорено открытие образов если отключено определение типов файлов
│  [+] Открытие файлов из командной строки через префикс "xSCL:"
│  [+] Сохранение последнего режима панели
│  [+] Редактирование атрибутов файла по F4
│  [+] Новый формат ini файла
│  [+] Возможность изменения пути в INI файлу
│  [!] Исправлена ошибка в работе с read-only файлами
│  [!] Исправлена ошибка добавления файла без расширения
│  [!] Проверка имён файлов на совпадение с именами системных устройств
│
├─┤??.??.2000├──┤xSCL v0.1b├─
│
│  исходная версия
│
·
·
├─[Об авторах]────────────────────────────────────────────────────────────────
│                     Авторами данного продукта являются
│               Дмитрий Козлов AKA HalfElf и Александр Медведев
│
│               xHRiP и другие плагины можно найти в Internet.
│            Адрес нашей странички: http://www.sn.nnov.ru/elf/2/
·
·
└──────────────────────────────────────────────────────────────[ 30.12.2003 ]─
